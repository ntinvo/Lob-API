{
  "_args": [
    [
      {
        "raw": "conventional-changelog@https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
        "scope": null,
        "escapedName": "conventional-changelog",
        "name": "conventional-changelog",
        "rawSpec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
        "spec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
        "type": "remote"
      },
      "/home/tinvo/Desktop/lob-node/node_modules/eslint-config-lob"
    ]
  ],
  "_from": "conventional-changelog@>=0.0.16 <0.0.17",
  "_id": "conventional-changelog@0.0.16",
  "_inCache": true,
  "_location": "/eslint-config-lob/conventional-changelog",
  "_phantomChildren": {},
  "_requested": {
    "raw": "conventional-changelog@https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
    "scope": null,
    "escapedName": "conventional-changelog",
    "name": "conventional-changelog",
    "rawSpec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
    "spec": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
    "type": "remote"
  },
  "_requiredBy": [],
  "_resolved": "https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
  "_shasum": "0997edbcd119882f920e9761c1e3d643d885d1ff",
  "_shrinkwrap": null,
  "_spec": "conventional-changelog@https://registry.npmjs.org/conventional-changelog/-/conventional-changelog-0.0.16.tgz",
  "_where": "/home/tinvo/Desktop/lob-node/node_modules/eslint-config-lob",
  "bugs": {
    "url": "https://github.com/ajoslin/conventional-changelog/issues"
  },
  "contributors": [
    {
      "name": "Brian Ford"
    },
    {
      "name": "Vojta JÃ­na"
    },
    {
      "name": "Andrew Joslin"
    }
  ],
  "dependencies": {
    "dateformat": "^1.0.11",
    "event-stream": "^3.1.7",
    "github-url-from-git": "^1.4.0",
    "lodash.assign": "^2.4.1",
    "lodash.partial": "^3.0.0",
    "lodash.template": "^3.3.0",
    "normalize-package-data": "^1.0.3"
  },
  "description": "Generate a markdown changelog from git commit metadata",
  "devDependencies": {
    "chai": "^2.0.0",
    "jshint": "^2.6.0",
    "mocha": "*",
    "shelljs": "^0.3.0",
    "sinon": "^1.12.2"
  },
  "files": [
    "index.js",
    "lib/",
    "test/"
  ],
  "homepage": "https://github.com/ajoslin/conventional-changelog#readme",
  "keywords": [
    "changelog"
  ],
  "license": "BSD",
  "main": "index.js",
  "name": "conventional-changelog",
  "optionalDependencies": {},
  "readme": "conventional-changelog\n----------------------\n\n```sh\n$ npm install conventional-changelog\n```\n\nGenerate a changelog from git metadata, using the AngularJS commit conventions.\n\n- [Synopsis of Conventions in CONVENTIONS.md](https://github.com/ajoslin/conventional-changelog/blob/master/CONVENTIONS.md)\n- [Full Convention Spec on Google Docs](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/)\n\nAdapted from code originally written by @vojtajina and @btford in [grunt-conventional-changelog](https://github.com/btford/grunt-conventional-changelog).\n\n## Example output\n\n- https://github.com/ajoslin/conventional-changelog/blob/master/CHANGELOG.md\n- https://github.com/karma-runner/karma/blob/master/CHANGELOG.md\n\n## Roadmap\n\n- Make it return a stream\n- Add a proper command line interface\n- Add configurable subjects & sections\n- Split up this repo into smaller modules [#22](https://github.com/ajoslin/conventional-changelog/issues/22)\n\n## Documentation\n\nSimple usage:\n\n```js\nrequire('conventional-changelog')({\n  repository: 'https://github.com/joyent/node',\n  version: require('./package.json').version\n}, function(err, log) {\n  console.log('Here is your changelog!', log);\n});\n```\n\n#### `changelog(options, callback)`\n\nBy default, calls the callback with a string containing a changelog from the previous tag to HEAD, using pkg.version, prepended to existing CHANGELOG.md (if it exists).\n\n`callback` is the second parameter, and takes two parameters: `(err, log)`. `log` is a string containing the newly generated changelog, and `err` is either an error or null.\n\n`options` is the first parameter, an object.  The following fields are available:\n\n##### The Most Important Options\n\n* `version` `{string}` - The version to be written to the changelog. For example, `{version: \"1.0.1\"}`. Defaults to the version found in `package.json`. See `pkg` to configure the path of package.json.\n\n* `subtitle` `{string}` - A string to display after the version title in the changelog. For example, it will show '## 1.0.0 \"Super Version\"' if codename '\"Super Version\"' is given. By default, it's blank.\n\n* `repository` `{string}` - If this is provided, allows issues and commit hashes to be linked to the actual commit.  Usually used with github repositories.  For example, `{repository: 'http://github.com/joyent/node'}`. Defaults to \"normalized\" `repository.url` found in `package.json`. See `pkg` to configure the path of package.json.\n\n* `pkg` `{string}` - The path of `package.json`. Defaults to `./package.json`.\n\n* `from` `{string}` - Which commit the changelog should start at. By default, uses previous tag, or if no previous tag the first commit.\n\n* `to` `{string}` - Which commit the changelog should end at.  By default, uses HEAD.\n\n* `file` `{string}` - Which file to read the current changelog from and prepend the new changelog's contents to.  By default, uses `'CHANGELOG.md'`.\n\n##### The \"I really want to get crazy\" Options\n\n* `versionText` `{function(version, subtitle)}` - What to use for the title of a major version in the changelog. Defaults to `'## ' + version + ' ' + subtitle`.\n\n* `patchVersionText` `{function(version, subtitle)}` - What to use for the title of a patch version in the changelog. Defaults to `'### ' + version + ' ' + subtitle`.\n\n* `commitLink` `{function(commitHash)}` - If repository is provided, this function will be used to link to commits. By default, returns a github commit link based on options.repository: `opts.repository + '/commit/' + hash`.\n\n* `issueLink` `{function(issueId)}` - If repository is provided, this function will be used to link to issues.  By default, returns a github issue link based on options.repository: `opts.repository + '/issues/' + id`.\n\n* `log` `{function()}` - What logging function to use. For example, `{log: grunt.log.ok}`. By default, uses `console.log`.\n\n* `warn` `{function()}` - What warn function to use. For example, `{warn: grunt.log.writeln}`. By default, uses `console.warn`.\n\n## License\n\nBSD\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ajoslin/conventional-changelog.git"
  },
  "scripts": {
    "lint": "jshint lib test index.js --exclude node_modules",
    "test": "npm run-script lint && mocha test/*.js index.js lib/*.js --no-colors"
  },
  "version": "0.0.16"
}
